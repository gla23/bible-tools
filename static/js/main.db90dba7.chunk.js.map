{"version":3,"sources":["data/verses.ts","parsing/transition.ts","parsing/errors.ts","data/books.ts","parsing/state.ts","parsing/input.ts","parsing/parse.ts","components/ParsedPassage.tsx","App.tsx","index.tsx"],"names":["ntVerseCounts","otVerseCounts","transitionMatrix","initial","number","book","chapter","colon","hyphen","verse","chapterHyphen","bookEnd","chapterEnd","verseEnd","error","end","nextStateType","stateType","inputType","ParseError","message","name","Error","BoundsError","BadInputError","maxValue","state","value","verseCounts","testament","next","type","length","console","log","checkValueBounds","min","minValue","max","boundType","endsWith","slice","otBooks","ntBooks","books","o","n","bookAbbrvs","valueStates","transition","input","newStateType","this","newState","State","inputs","string","indexOf","valueState","sectionTo","toReference","initialState","Input","turkishLetterNumbers","231","351","246","252","199","350","214","220","parseBookName","matches","toLowerCase","startsWith","nameIndex","findIndex","abbrvIndex","nameFound","array","index","whitespaceRegex","parseInput","ntBookInput","otBookInput","singleLetterNumber","codepoint","codePointAt","match","parseSingleLetterNumber","numberInput","cutOff","testString","Number","parseMultiDigitNumber","whitespaceMatch","ParsedPassage","props","className","map","key","App","useState","setInput","remainingString","parse","onKeyPress","e","reference","onChange","target","toString","JSON","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAAaA,EAAgB,CAC3B,CACE,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IAEF,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC7D,CACE,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IAEF,CACE,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IAEF,CACE,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IAEF,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC7D,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC7D,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjD,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,GAAI,IACjB,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,IACT,CAAC,IACD,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjD,CAAC,GAAI,GAAI,GAAI,GAAI,IACjB,CAAC,GAAI,GAAI,GAAI,GAAI,IACjB,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,GAAI,GAAI,IACjB,CAAC,IACD,CAAC,IACD,CAAC,IACD,CACE,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,KAISC,EAAgB,CAC3B,CACE,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IAEF,CACE,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IAEF,CACE,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IAEF,CACE,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IAEF,CACE,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IAEF,CACE,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,IAEF,CACE,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IAEF,CAAC,GAAI,GAAI,GAAI,IACbrC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjD,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACrC,CACE,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IAEF,CACE,EACA,GACA,EACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,EACA,EACA,GACA,GACA,EACA,GACA,IACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GAEF,CACE,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IAEF,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC7C,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC7B,CACE,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,EACA,GACA,GACA,EACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IAEF,CACE,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,EACA,GACA,GACA,GACA,GACA,IAEF,CAAC,GAAI,GAAI,GAAI,GAAI,IACjB,CACE,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,GACA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YACA,cACA,aACA,kBACA,kBACA,YACA,YACA,QACA,WACA,UACA,QACA,UACA,UACA,SACA,SACA,SACA,OACA,cA0EWC,EAAQ,CACnBC,EAAGH,EACHI,EAAGH,GAEQI,EAAa,CACxBF,EA5E0B,CAC1B,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,MACA,MACA,KACA,KACA,MACA,MACA,KACA,MACA,MACA,MACA,MACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAsCAC,EAnC0B,CAC1B,MACA,MACA,KACA,KACA,MACA,KACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,QCxIIE,EAAc,CAClB,OACA,UACA,QACA,UACA,aACA,YAMF,SAASC,EAAwBC,GAC/B,IAJoBxB,EAIdyB,EAAenC,EAAcoC,KAAKrB,KAAMmB,EAAMnB,MAC9CsB,EAAkB,IAAIC,EAAMF,MASlC,OARAC,EAAStB,KAAOoB,EAChBE,EAASxB,UAAYqB,EAAMrB,WAAauB,KAAKvB,UAC7CwB,EAASE,OAAT,sBAAsBH,KAAKG,QAA3B,CAAmCL,IACnCG,EAASG,OAASJ,KAAKI,OAASN,EAAMM,OACtCH,EAASvC,MAAQoC,EAAMpC,OAASsC,KAAKtC,MAClB,WAAfoC,EAAMnB,OAXUL,EAWwByB,GAVE,IAA9CH,EAAYS,QAAQ/B,MAWlB2B,EAASF,GAAgBD,GAEpBG,EA2BT,SAASnC,EAAuBgC,GAAuB,IAAD,gBAC7BF,GAD6B,IACpD,2BAAoC,CAAC,IAA5BU,EAA2B,QAClC,GAAIN,KAAKM,KAAgBR,EAAO,OAAOQ,GAFW,8BAIpD,OAAOR,EAAMnB,KAKR,IAAMuB,EAAb,WACE,WAAY5B,GAAgB,yBAe5BuB,WAAmDA,EAfxB,KAgB3B/B,UAAmDA,EAhBxB,KAoB3Ba,KAAkB,UApBS,KAqB3BF,UAA8B,KArBH,KAsB3BxB,KAAqB,KAtBM,KAu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","file":"static/js/main.db90dba7.chunk.js","sourcesContent":["export const ntVerseCounts = [\n  [\n    25,\n    23,\n    17,\n    25,\n    48,\n    34,\n    29,\n    34,\n    38,\n    42,\n    30,\n    50,\n    58,\n    36,\n    39,\n    28,\n    27,\n    35,\n    30,\n    34,\n    46,\n    46,\n    39,\n    51,\n    46,\n    75,\n    66,\n    20,\n  ],\n  [45, 28, 35, 41, 43, 56, 37, 38, 50, 52, 33, 44, 37, 72, 47, 20],\n  [\n    80,\n    52,\n    38,\n    44,\n    39,\n    49,\n    50,\n    56,\n    62,\n    42,\n    54,\n    59,\n    35,\n    35,\n    32,\n    31,\n    37,\n    43,\n    48,\n    47,\n    38,\n    71,\n    56,\n    53,\n  ],\n  [\n    51,\n    25,\n    36,\n    54,\n    47,\n    71,\n    53,\n    59,\n    41,\n    42,\n    57,\n    50,\n    38,\n    31,\n    27,\n    33,\n    26,\n    40,\n    42,\n    31,\n    25,\n  ],\n  [\n    26,\n    47,\n    26,\n    37,\n    42,\n    15,\n    60,\n    40,\n    43,\n    48,\n    30,\n    25,\n    52,\n    28,\n    41,\n    40,\n    34,\n    28,\n    41,\n    38,\n    40,\n    30,\n    35,\n    27,\n    27,\n    32,\n    44,\n    31,\n  ],\n  [32, 29, 31, 25, 21, 23, 25, 39, 33, 21, 36, 21, 14, 23, 33, 27],\n  [31, 16, 23, 21, 13, 20, 40, 13, 27, 33, 34, 31, 13, 40, 58, 24],\n  [24, 17, 18, 18, 21, 18, 16, 24, 15, 18, 33, 21, 14],\n  [24, 21, 29, 31, 26, 18],\n  [23, 22, 21, 32, 33, 24],\n  [30, 30, 21, 23],\n  [29, 23, 25, 18],\n  [10, 20, 13, 18, 28],\n  [12, 17, 18],\n  [20, 15, 16, 16, 25, 21],\n  [18, 26, 17, 22],\n  [16, 15, 15],\n  [25],\n  [14, 18, 19, 16, 14, 20, 28, 13, 28, 39, 40, 29, 25],\n  [27, 26, 18, 17, 20],\n  [25, 25, 22, 19, 14],\n  [21, 22, 18],\n  [10, 29, 24, 21, 21],\n  [13],\n  [14],\n  [25],\n  [\n    20,\n    29,\n    22,\n    11,\n    14,\n    17,\n    17,\n    13,\n    21,\n    11,\n    19,\n    17,\n    18,\n    20,\n    8,\n    21,\n    18,\n    24,\n    21,\n    15,\n    27,\n    21,\n  ],\n];\n\nexport const otVerseCounts = [\n  [\n    31,\n    25,\n    24,\n    26,\n    32,\n    22,\n    24,\n    22,\n    29,\n    32,\n    32,\n    20,\n    18,\n    24,\n    21,\n    16,\n    27,\n    33,\n    38,\n    18,\n    34,\n    24,\n    20,\n    67,\n    34,\n    35,\n    46,\n    22,\n    35,\n    43,\n    55,\n    32,\n    20,\n    31,\n    29,\n    43,\n    36,\n    30,\n    23,\n    23,\n    57,\n    38,\n    34,\n    34,\n    28,\n    34,\n    31,\n    22,\n    33,\n    26,\n  ],\n  [\n    22,\n    25,\n    22,\n    31,\n    23,\n    30,\n    25,\n    32,\n    35,\n    29,\n    10,\n    51,\n    22,\n    31,\n    27,\n    36,\n    16,\n    27,\n    25,\n    26,\n    36,\n    31,\n    33,\n    18,\n    40,\n    37,\n    21,\n    43,\n    46,\n    38,\n    18,\n    35,\n    23,\n    35,\n    35,\n    38,\n    29,\n    31,\n    43,\n    38,\n  ],\n  [\n    17,\n    16,\n    17,\n    35,\n    19,\n    30,\n    38,\n    36,\n    24,\n    20,\n    47,\n    8,\n    59,\n    57,\n    33,\n    34,\n    16,\n    30,\n    37,\n    27,\n    24,\n    33,\n    44,\n    23,\n    55,\n    46,\n    34,\n  ],\n  [\n    54,\n    34,\n    51,\n    49,\n    31,\n    27,\n    89,\n    26,\n    23,\n    36,\n    35,\n    16,\n    33,\n    45,\n    41,\n    50,\n    13,\n    32,\n    22,\n    29,\n    35,\n    41,\n    30,\n    25,\n    18,\n    65,\n    23,\n    31,\n    40,\n    16,\n    54,\n    42,\n    56,\n    29,\n    34,\n    13,\n  ],\n  [\n    46,\n    37,\n    29,\n    49,\n    33,\n    25,\n    26,\n    20,\n    29,\n    22,\n    32,\n    32,\n    18,\n    29,\n    23,\n    22,\n    20,\n    22,\n    21,\n    20,\n    23,\n    30,\n    25,\n    22,\n    19,\n    19,\n    26,\n    68,\n    29,\n    20,\n    30,\n    52,\n    29,\n    12,\n  ],\n  [\n    18,\n    24,\n    17,\n    24,\n    15,\n    27,\n    26,\n    35,\n    27,\n    43,\n    23,\n    24,\n    33,\n    15,\n    63,\n    10,\n    18,\n    28,\n    51,\n    9,\n    45,\n    34,\n    16,\n    33,\n  ],\n  [\n    36,\n    23,\n    31,\n    24,\n    31,\n    40,\n    25,\n    35,\n    57,\n    18,\n    40,\n    15,\n    25,\n    20,\n    20,\n    31,\n    13,\n    31,\n    30,\n    48,\n    25,\n  ],\n  [22, 23, 18, 22],\n  [\n    28,\n    36,\n    21,\n    22,\n    12,\n    21,\n    17,\n    22,\n    27,\n    27,\n    15,\n    25,\n    23,\n    52,\n    35,\n    23,\n    58,\n    30,\n    24,\n    42,\n    15,\n    23,\n    29,\n    22,\n    44,\n    25,\n    12,\n    25,\n    11,\n    31,\n    13,\n  ],\n  [\n    27,\n    32,\n    39,\n    12,\n    25,\n    23,\n    29,\n    18,\n    13,\n    19,\n    27,\n    31,\n    39,\n    33,\n    37,\n    23,\n    29,\n    33,\n    43,\n    26,\n    22,\n    51,\n    39,\n    25,\n  ],\n  [\n    53,\n    46,\n    28,\n    34,\n    18,\n    38,\n    51,\n    66,\n    28,\n    29,\n    43,\n    33,\n    34,\n    31,\n    34,\n    34,\n    24,\n    46,\n    21,\n    43,\n    29,\n    53,\n  ],\n  [\n    18,\n    25,\n    27,\n    44,\n    27,\n    33,\n    20,\n    29,\n    37,\n    36,\n    21,\n    21,\n    25,\n    29,\n    38,\n    20,\n    41,\n    37,\n    37,\n    21,\n    26,\n    20,\n    37,\n    20,\n    30,\n  ],\n  [\n    54,\n    55,\n    24,\n    43,\n    26,\n    81,\n    40,\n    40,\n    44,\n    14,\n    47,\n    40,\n    14,\n    17,\n    29,\n    43,\n    27,\n    17,\n    19,\n    8,\n    30,\n    19,\n    32,\n    31,\n    31,\n    32,\n    34,\n    21,\n    30,\n  ],\n  [\n    17,\n    18,\n    17,\n    22,\n    14,\n    42,\n    22,\n    18,\n    31,\n    19,\n    23,\n    16,\n    22,\n    15,\n    19,\n    14,\n    19,\n    34,\n    11,\n    37,\n    20,\n    12,\n    21,\n    27,\n    28,\n    23,\n    9,\n    27,\n    36,\n    27,\n    21,\n    33,\n    25,\n    33,\n    27,\n    23,\n  ],\n  [11, 70, 13, 24, 17, 22, 28, 36, 15, 44],\n  [11, 20, 32, 23, 19, 19, 73, 18, 38, 39, 36, 47, 31],\n  [22, 23, 15, 17, 14, 14, 10, 17, 32, 3],\n  [\n    22,\n    13,\n    26,\n    21,\n    27,\n    30,\n    21,\n    22,\n    35,\n    22,\n    20,\n    25,\n    28,\n    22,\n    35,\n    22,\n    16,\n    21,\n    29,\n    29,\n    34,\n    30,\n    17,\n    25,\n    6,\n    14,\n    23,\n    28,\n    25,\n    31,\n    40,\n    22,\n    33,\n    37,\n    16,\n    33,\n    24,\n    41,\n    30,\n    24,\n    34,\n    17,\n  ],\n  [\n    6,\n    12,\n    8,\n    8,\n    12,\n    10,\n    17,\n    9,\n    20,\n    18,\n    7,\n    8,\n    6,\n    7,\n    5,\n    11,\n    15,\n    50,\n    14,\n    9,\n    13,\n    31,\n    6,\n    10,\n    22,\n    12,\n    14,\n    9,\n    11,\n    12,\n    24,\n    11,\n    22,\n    22,\n    28,\n    12,\n    40,\n    22,\n    13,\n    17,\n    13,\n    11,\n    5,\n    26,\n    17,\n    11,\n    9,\n    14,\n    20,\n    23,\n    19,\n    9,\n    6,\n    7,\n    23,\n    13,\n    11,\n    11,\n    17,\n    12,\n    8,\n    12,\n    11,\n    10,\n    13,\n    20,\n    7,\n    35,\n    36,\n    5,\n    24,\n    20,\n    28,\n    23,\n    10,\n    12,\n    20,\n    72,\n    13,\n    19,\n    16,\n    8,\n    18,\n    12,\n    13,\n    17,\n    7,\n    18,\n    52,\n    17,\n    16,\n    15,\n    5,\n    23,\n    11,\n    13,\n    12,\n    9,\n    9,\n    5,\n    8,\n    28,\n    22,\n    35,\n    45,\n    48,\n    43,\n    13,\n    31,\n    7,\n    10,\n    10,\n    9,\n    8,\n    18,\n    19,\n    2,\n    29,\n    176,\n    7,\n    8,\n    9,\n    4,\n    8,\n    5,\n    6,\n    5,\n    6,\n    8,\n    8,\n    3,\n    18,\n    3,\n    3,\n    21,\n    26,\n    9,\n    8,\n    24,\n    13,\n    10,\n    7,\n    12,\n    15,\n    21,\n    10,\n    20,\n    14,\n    9,\n    6,\n  ],\n  [\n    33,\n    22,\n    35,\n    27,\n    23,\n    35,\n    27,\n    36,\n    18,\n    32,\n    31,\n    28,\n    25,\n    35,\n    33,\n    33,\n    28,\n    24,\n    29,\n    30,\n    31,\n    29,\n    35,\n    34,\n    28,\n    28,\n    27,\n    28,\n    27,\n    33,\n    31,\n  ],\n  [18, 26, 22, 16, 20, 12, 29, 17, 18, 20, 10, 14],\n  [17, 17, 11, 16, 16, 13, 13, 14],\n  [\n    31,\n    22,\n    26,\n    6,\n    30,\n    13,\n    25,\n    22,\n    21,\n    34,\n    16,\n    6,\n    22,\n    32,\n    9,\n    14,\n    14,\n    7,\n    25,\n    6,\n    17,\n    25,\n    18,\n    23,\n    12,\n    21,\n    13,\n    29,\n    24,\n    33,\n    9,\n    20,\n    24,\n    17,\n    10,\n    22,\n    38,\n    22,\n    8,\n    31,\n    29,\n    25,\n    28,\n    28,\n    25,\n    13,\n    15,\n    22,\n    26,\n    11,\n    23,\n    15,\n    12,\n    17,\n    13,\n    12,\n    21,\n    14,\n    21,\n    22,\n    11,\n    12,\n    19,\n    12,\n    25,\n    24,\n  ],\n  [\n    19,\n    37,\n    25,\n    31,\n    31,\n    30,\n    34,\n    22,\n    26,\n    25,\n    23,\n    17,\n    27,\n    22,\n    21,\n    21,\n    27,\n    23,\n    15,\n    18,\n    14,\n    30,\n    40,\n    10,\n    38,\n    24,\n    22,\n    17,\n    32,\n    24,\n    40,\n    44,\n    26,\n    22,\n    19,\n    32,\n    21,\n    28,\n    18,\n    16,\n    18,\n    22,\n    13,\n    30,\n    5,\n    28,\n    7,\n    47,\n    39,\n    46,\n    64,\n    34,\n  ],\n  [22, 22, 66, 22, 22],\n  [\n    28,\n    10,\n    27,\n    17,\n    17,\n    14,\n    27,\n    18,\n    11,\n    22,\n    25,\n    28,\n    23,\n    23,\n    8,\n    63,\n    24,\n    32,\n    14,\n    49,\n    32,\n    31,\n    49,\n    27,\n    17,\n    21,\n    36,\n    26,\n    21,\n    26,\n    18,\n    32,\n    33,\n    31,\n    15,\n    38,\n    28,\n    23,\n    29,\n    49,\n    26,\n    20,\n    27,\n    31,\n    25,\n    24,\n    23,\n    35,\n  ],\n  [21, 49, 30, 37, 31, 28, 28, 27, 27, 21, 45, 13],\n  [11, 23, 5, 19, 15, 11, 16, 14, 17, 15, 12, 14, 16, 9],\n  [20, 32, 21],\n  [15, 16, 15, 13, 27, 14, 17, 14, 15],\n  [21],\n  [17, 10, 10, 11],\n  [16, 13, 12, 13, 15, 16, 20],\n  [15, 13, 19],\n  [17, 20, 19],\n  [18, 15, 20],\n  [15, 23],\n  [21, 13, 10, 14, 11, 15, 14, 23, 17, 12, 17, 14, 9, 21],\n  [14, 17, 18, 6],\n];\n","export type StateType =\n  | \"initial\"\n  | \"book\"\n  | \"chapter\"\n  | \"verse\"\n  | \"chapterHyphen\"\n  | \"bookEnd\"\n  | \"chapterEnd\"\n  | \"verseEnd\"\n  | \"error\"\n  | \"end\";\n\nexport type InputType =\n  | \"number\"\n  | \"hyphen\"\n  | \"whitespace\"\n  | \"end\"\n  | \"error\"\n  | \"colon\";\n\ntype StateTransition = {\n  readonly [E in InputType]?: StateType;\n};\ntype TransitionMatrix = {\n  readonly [E in StateType]: StateTransition;\n};\n\nconst transitionMatrix: TransitionMatrix = {\n  initial: {\n    number: \"book\",\n  },\n  book: {\n    number: \"chapter\",\n  },\n  chapter: {\n    number: \"verse\",\n    colon: \"chapter\",\n    hyphen: \"chapterHyphen\",\n  },\n  verse: {\n    hyphen: \"chapterEnd\", // or ChapterHyphen! Change to array when upgrading to have paths\n  },\n  chapterHyphen: {\n    number: \"chapterEnd\",\n  },\n  bookEnd: {},\n  chapterEnd: {\n    number: \"verseEnd\",\n    colon: \"chapterEnd\",\n  },\n  verseEnd: {},\n  error: {},\n  end: {},\n};\n\nexport function nextStateType(\n  stateType: StateType,\n  inputType: InputType\n): StateType {\n  return inputType === \"end\"\n    ? \"end\"\n    : transitionMatrix[stateType][inputType] ||\n        (inputType === \"whitespace\" ? stateType : \"error\");\n}\n","import { State } from \"./state\";\nimport { ntVerseCounts, otVerseCounts } from \"../data/verses\";\nimport { nextStateType } from \"./transition\";\n\nexport abstract class ParseError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = \"ParseError\";\n  }\n}\nexport class BoundsError extends ParseError {\n  constructor(message: string) {\n    super(message);\n    this.name = \"BoundsError\";\n  }\n}\nexport class BadInputError extends ParseError {\n  constructor(message: string) {\n    super(message);\n    this.name = \"BadInputError\";\n  }\n}\nexport class ParseLogicError extends ParseError {\n  constructor(message: string) {\n    super(message);\n    this.name = \"BadInputError\";\n  }\n}\n\nexport const maxValue = (state: State): number => {\n  const book = state.book?.value || 1;\n  const chapter = state.chapter?.value || 1;\n  const verseCounts = state.testament === \"o\" ? otVerseCounts : ntVerseCounts;\n  const next = nextStateType(state.type, \"number\");\n  if (next === \"book\" || next === \"bookEnd\") return verseCounts.length;\n  if (next === \"chapter\" || next === \"chapterEnd\")\n    return verseCounts[book - 1].length;\n  if (next === \"verse\" || next === \"verseEnd\")\n    return verseCounts[book - 1][chapter - 1];\n  console.log(\"Hmmm\", state.type);\n  return 0;\n};\nexport const minValue = (state: State): number => {\n  const next = nextStateType(state.type, \"number\");\n  const book = state.book?.value || -1;\n  const chapter = state.chapter?.value || -1;\n  const verse = state.verse?.value || -1;\n  if (next === \"bookEnd\") return book + 1;\n  if (next === \"chapterEnd\") return chapter + 1;\n  if (next === \"verseEnd\") return verse + 1;\n  return 0;\n};\n\nexport const checkValueBounds = (state: State, value: number): Error | null => {\n  const min = minValue(state);\n  const max = maxValue(state);\n  const next = nextStateType(state.type, \"number\");\n  const boundType = next.endsWith(\"To\") ? next.slice(0, -2) : next;\n  if (max < min) return new BoundsError(`No valid ${boundType}`);\n  if (value < min)\n    return new BoundsError(`${boundType} must be over ${min - 1}`);\n  if (value > max)\n    return new BoundsError(`${value} is over maximum of ${max} ${boundType}s`);\n  return null;\n};\n","export const otBooks = [\n  \"Genesis\",\n  \"Exodus\",\n  \"Leviticus\",\n  \"Numbers\",\n  \"Deuteronomy\",\n  \"Joshua\",\n  \"Judges\",\n  \"Ruth\",\n  \"1 Samuel\",\n  \"2 Samuel\",\n  \"1 Kings\",\n  \"2 Kings\",\n  \"1 Chronicles\",\n  \"2 Chronicles\",\n  \"Ezra\",\n  \"Nehemiah\",\n  \"Esther\",\n  \"Job\",\n  \"Psalm\",\n  \"Proverbs\",\n  \"Ecclesiastes\",\n  \"Song of Songs\",\n  \"Isaiah\",\n  \"Jeremiah\",\n  \"Lamentations\",\n  \"Ezekiel\",\n  \"Daniel\",\n  \"Hosea\",\n  \"Joel\",\n  \"Amos\",\n  \"Obadiah\",\n  \"Jonah\",\n  \"Micah\",\n  \"Nahum\",\n  \"Habakkuk\",\n  \"Zephaniah\",\n  \"Haggai\",\n  \"Zechariah\",\n  \"Malachi\",\n];\n\nexport const ntBooks = [\n  \"Matthew\",\n  \"Mark\",\n  \"Luke\",\n  \"John\",\n  \"Acts\",\n  \"Romans\",\n  \"1 Corinthians\",\n  \"2 Corinthians\",\n  \"Galatians\",\n  \"Ephesians\",\n  \"Philippians\",\n  \"Colossians\",\n  \"1 Thessalonians\",\n  \"2 Thessalonians\",\n  \"1 Timothy\",\n  \"2 Timothy\",\n  \"Titus\",\n  \"Philemon\",\n  \"Hebrews\",\n  \"James\",\n  \"1 Peter\",\n  \"2 Peter\",\n  \"1 John\",\n  \"2 John\",\n  \"3 John\",\n  \"Jude\",\n  \"Revelation\",\n];\n\nexport const otBookAbbrvs = [\n  \"Gen\",\n  \"Exo\",\n  \"Lev\",\n  \"Num\",\n  \"Deu\",\n  \"Jos\",\n  \"Jud\",\n  \"Ru\",\n  \"1S\",\n  \"2S\",\n  \"1K\",\n  \"2K\",\n  \"1C\",\n  \"2C\",\n  \"Ezr\",\n  \"Ne\",\n  \"Est\",\n  \"Job\",\n  \"Ps\",\n  \"Pr\",\n  \"Ecc\",\n  \"Son\",\n  \"Is\",\n  \"Jer\",\n  \"Lam\",\n  \"Eze\",\n  \"Dan\",\n  \"Ho\",\n  \"Joe\",\n  \"Amo\",\n  \"Oba\",\n  \"Jon\",\n  \"Mic\",\n  \"Nah\",\n  \"Hab\",\n  \"Zep\",\n  \"Hag\",\n  \"Zec\",\n  \"Mal\",\n];\n\nexport const ntBookAbbrvs = [\n  \"Mat\",\n  \"Mar\",\n  \"Lu\",\n  \"Jo\",\n  \"Act\",\n  \"Ro\",\n  \"1Cor\",\n  \"2Cor\",\n  \"Gala\",\n  \"Ephe\",\n  \"Colo\",\n  \"Phi\",\n  \"1Th\",\n  \"2Th\",\n  \"1Ti\",\n  \"2Ti\",\n  \"Ti\",\n  \"Phm\",\n  \"He\",\n  \"Ja\",\n  \"1P\",\n  \"2P\",\n  \"1J\",\n  \"2J\",\n  \"3J\",\n  \"Jude\",\n  \"Rev\",\n];\nexport const books = {\n  o: otBooks,\n  n: ntBooks,\n};\nexport const bookAbbrvs = {\n  o: otBookAbbrvs,\n  n: ntBookAbbrvs,\n};\n","import { Input } from \"./input\";\nimport { nextStateType, StateType } from \"./transition\";\nimport { otBooks, ntBooks } from \"../data/books\";\nimport { ParseError } from \"./errors\";\n\nconst valueStates = [\n  \"book\",\n  \"chapter\",\n  \"verse\",\n  \"bookEnd\",\n  \"chapterEnd\",\n  \"verseEnd\",\n] as const;\ntype ValueState = typeof valueStates[number];\nconst isValueState = (state: StateType): state is ValueState =>\n  valueStates.indexOf(state as ValueState) !== -1;\n\nfunction transition(this: State, input: Input): State {\n  const newStateType = nextStateType(this.type, input.type);\n  const newState: State = new State(this);\n  newState.type = newStateType;\n  newState.testament = input.testament || this.testament;\n  newState.inputs = [...this.inputs, input];\n  newState.string = this.string + input.string;\n  newState.error = input.error || this.error;\n  if (input.type === \"number\" && isValueState(newStateType)) {\n    newState[newStateType] = input;\n  }\n  return newState;\n}\n\nfunction toReference(state: State): string {\n  const {\n    testament,\n    book,\n    chapter,\n    verse,\n    bookEnd,\n    chapterEnd,\n    verseEnd,\n  } = state;\n  const books = testament === \"o\" ? otBooks : ntBooks;\n  const sectionTo =\n    (bookEnd ? books[(bookEnd.value || 1) - 1] + \" \" : \"\") +\n    (chapterEnd?.value || \"\") +\n    (chapterEnd && verseEnd ? \":\" : \"\") +\n    (verseEnd?.value || \"\");\n  return (\n    (book ? books[(book.value || 1) - 1] : \"\") +\n    (chapter ? \" \" + chapter.value : \"\") +\n    (verse ? \":\" + verse.value : \"\") +\n    (sectionTo ? \"-\" + sectionTo : \"\")\n  );\n}\n\nfunction inputType(this: State, input: Input): string {\n  for (let valueState of valueStates) {\n    if (this[valueState] === input) return valueState;\n  }\n  return input.type;\n}\n\nexport type Testament = \"o\" | \"n\";\n\nexport class State {\n  constructor(state?: State) {\n    if (state) {\n      this.type = state.type;\n      this.testament = state.testament;\n      this.book = state.book;\n      this.chapter = state.chapter;\n      this.verse = state.verse;\n      this.bookEnd = state.bookEnd;\n      this.chapterEnd = state.chapterEnd;\n      this.verseEnd = state.verseEnd;\n      this.inputs = state.inputs;\n      this.string = state.string;\n      this.error = state.error;\n    }\n  }\n  transition: (this: State, input: Input) => State = transition;\n  inputType: (this: State, input: Input) => string = inputType;\n  get reference(): string {\n    return toReference(this);\n  }\n  type: StateType = \"initial\";\n  testament: Testament | null = null;\n  book: Input | null = null;\n  chapter: Input | null = null;\n  verse: Input | null = null;\n  bookEnd: Input | null = null;\n  chapterEnd: Input | null = null;\n  verseEnd: Input | null = null;\n  inputs: Input[] = [];\n  string: string = \"\";\n  error: ParseError | null = null;\n}\n\nexport const initialState = new State();\n","import { InputType } from \"./transition\";\nimport { Testament } from \"./state\";\nimport { ParseError } from \"./errors\";\n\nexport class Input {\n  constructor(\n    readonly type: InputType,\n    readonly string: string,\n    readonly value: number | null,\n    readonly testament: Testament | null = null,\n    readonly error: ParseError | null = null\n  ) {}\n}\n","import { BadInputError, checkValueBounds, maxValue } from \"./errors\";\nimport { State, initialState, Testament } from \"./state\";\nimport { nextStateType } from \"./transition\";\nimport { Input } from \"./input\";\nimport { books, bookAbbrvs } from \"../data/books\";\n\nconst turkishLetterNumbers = {\n  231: 27, // ç\n  351: 28, // ş\n  246: 29, // ö\n  252: 30, // ü\n  199: 57, // Ç\n  350: 58, // Ş\n  214: 59, // Ö\n  220: 60, // Ü\n} as const;\nconst parseSingleLetterNumber = (input: string): number | null => {\n  const codepoint = input.codePointAt(0);\n  if (!codepoint) return null;\n  if (input.match(/^[a-z]/)) return codepoint - 96;\n  if (input.match(/^[A-Z]/)) return codepoint - 34;\n  if (input.match(/^0/)) return 30;\n  if (input.match(/^[çÇşŞöÖüÜ]/))\n    return turkishLetterNumbers[codepoint as keyof typeof turkishLetterNumbers];\n  return null;\n};\n\nconst parseMultiDigitNumber = (input: string, state: State): Input | null => {\n  const availableDigits = input.match(/^\\d+/);\n  if (!availableDigits) return null;\n  const max = maxValue(state);\n  for (let cutOff = 0; cutOff < input.length; cutOff++) {\n    const testString = cutOff ? input.slice(0, -cutOff) : input;\n    if (Number(testString) <= max)\n      return new Input(\"number\", testString, Number(testString));\n  }\n  return null;\n};\n\nconst parseBookName = (input: string, testament: Testament): Input | null => {\n  const matches = (name: string) =>\n    input.toLowerCase().startsWith(name.toLowerCase());\n  const nameIndex = books[testament].findIndex(matches);\n  const abbrvIndex = bookAbbrvs[testament].findIndex(matches);\n  const nameFound = nameIndex !== -1;\n  const abbrvFound = abbrvIndex !== -1;\n  if (!nameFound && !abbrvFound) return null;\n  const array = nameFound ? books[testament] : bookAbbrvs[testament];\n  const index = nameFound ? nameIndex : abbrvIndex;\n  return new Input(\n    \"number\",\n    input.slice(0, array[index].length),\n    index + 1,\n    testament\n  );\n};\n\nconst whitespaceRegex = /^\\s+/;\nconst parseInput = (state: State, input: string): Input => {\n  if (input === \"\") return new Input(\"end\", \"\", null);\n  if (input.startsWith(\"-\")) return new Input(\"hyphen\", \"-\", null);\n  if (input.startsWith(\":\")) return new Input(\"colon\", \":\", null);\n\n  if (state.type === \"verse\") return new Input(\"end\", \"\", null);\n  if (state.type === \"verseEnd\") return new Input(\"end\", \"\", null);\n\n  if (!state.book) {\n    const ntBookInput = parseBookName(input, \"n\");\n    const otBookInput = parseBookName(input, \"o\");\n    if (ntBookInput) return ntBookInput;\n    if (otBookInput) return otBookInput;\n  }\n\n  const singleLetterNumber = parseSingleLetterNumber(input);\n  if (singleLetterNumber) {\n    const error = checkValueBounds(state, singleLetterNumber);\n    return new Input(\n      error ? \"error\" : \"number\",\n      input[0],\n      singleLetterNumber,\n      nextStateType(state.type, \"number\") === \"book\" ? \"n\" : null,\n      error\n    );\n  }\n\n  const numberInput = parseMultiDigitNumber(input, state);\n  if (numberInput) return numberInput;\n\n  const whitespaceMatch = input.match(whitespaceRegex);\n  if (whitespaceMatch) return new Input(\"whitespace\", whitespaceMatch[0], null);\n\n  return new Input(\n    \"error\",\n    input,\n    null,\n    null,\n    new BadInputError(\"Unexpected input \" + input)\n  );\n};\n\nexport const parse = (string: string): State => {\n  let state = initialState;\n  while (true) {\n    const remainingString = string.slice(state.string.length);\n    const input: Input = parseInput(state, remainingString);\n    state = state.transition(input);\n    if (state.type === \"error\" || state.type === \"end\") return state;\n  }\n};\n","import React from \"react\";\nimport { State } from \"../parsing/state\";\nimport \"./ParsedPassage.css\";\n\ninterface ParsedPassageProps {\n  state: State;\n  input?: string;\n}\nexport const ParsedPassage = (props: ParsedPassageProps) => {\n  const { state, input = state.string } = props;\n  return (\n    <span className=\"parsedPassage\">\n      {state.inputs.map((input, index) => (\n        <span key={index} className={state.inputType(input) + \"Text\"}>\n          {input.string}\n        </span>\n      ))}\n      {input.slice(state.string.length)}\n    </span>\n  );\n};\n","import React, { useState } from \"react\";\nimport { parse } from \"./parsing/parse\";\nimport { ParsedPassage } from \"./components/ParsedPassage\";\n\nfunction App() {\n  const [input, setInput] = useState(\"festival\");\n  const state = parse(input);\n  return (\n    <div className=\"App\">\n      Bible-tools\n      <br />\n      <br />\n      Input:{\" \"}\n      <input\n        type=\"text\"\n        value={input}\n        onKeyPress={(e) => e.key === \"Enter\" && setInput(state.reference)}\n        onChange={(e) => setInput(e.target.value)}\n      />\n      <br />\n      <br />\n      <ParsedPassage input={input} state={state} />\n      <br />\n      {state.reference}\n      <br />\n      <br />\n      {state.error?.toString()}\n      <br />\n      <br />\n      <pre>{JSON.stringify(state, null, 2)}</pre>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}